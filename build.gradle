apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'

version = '1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	// If you are behind a firewall and have a local maven repo set up, then use
    mavenLocal()
    
    // If you aren't behind a firewall, then use
    mavenCentral(); 
}

def robotManifest = {
  attributes 'Main-Class': 'edu.wpi.first.wpilibj.RobotBase'
  attributes 'Implementation-Title': 'Crate Robot'
}

task fatjar( type: Jar ) {
	manifest robotManifest
	baseName = project.name + '-all'
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}

jar.finalizedBy(fatjar) 

dependencies {
	compile files('libs/WPILib.jar', 'libs/NetworkTables.jar')
	compile 'org.apache.commons:commons-collections4:4.1'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
        resources {
            srcDirs = ['src/resources']
        }
    }
}